"use strict";/**
 * @module graph
 *
 * A small library of graph algorithms.
 *
 * @copyright (c) 2017 David Mesquita-Morris
 *
 * Licensed under the MIT and GPL v3 licences
 */var cov_2aqt4jfegr=function(){var path="/Users/david/Dropbox/Development/steelbreeze/graph/lib/node/index.js",hash="ee89f83b1c242237d7c546c89dafb5c0f2a2c43e",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/david/Dropbox/Development/steelbreeze/graph/lib/node/index.js",statementMap:{"0":{start:{line:11,column:0},end:{line:11,column:62}},"1":{start:{line:13,column:13},end:{line:13,column:30}},"2":{start:{line:14,column:0},end:{line:14,column:27}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0},f:{},b:{},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_2aqt4jfegr.s[0];Object.defineProperty(exports,"__esModule",{value:true});// pull in the tree algorithms
var tree_1=(++cov_2aqt4jfegr.s[1],require("./tree"));++cov_2aqt4jfegr.s[2];exports.Tree=tree_1.Tree;